name: Build and Publish CUA Ubuntu Container

on:
  push:
    branches:
      - main
    tags:
      - "kasm-v*"
    paths:
      - "libs/kasm/**"
      - ".github/workflows/docker-publish-kasm.yml"
  pull_request:
    paths:
      - "libs/kasm/**"
      - ".github/workflows/docker-publish-kasm.yml"
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag (e.g., 1.0.0)"
        required: false
        default: "latest"

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: cua-ubuntu
  DOCKER_HUB_ORG: trycua

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - windows/amd64
          - darwin/amd64
          - darwin/arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: trycua
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_HUB_ORG }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' && inputs.version != 'latest' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./libs/kasm
          file: ./libs/kasm/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}

      - name: Image digest
        run: echo "Image pushed with digest ${{ steps.meta.outputs.digest }}"
